<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://kerkday.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kerkday.com/" rel="alternate" type="text/html" /><updated>2021-02-06T15:59:57-07:00</updated><id>https://kerkday.com/feed.xml</id><title type="html">Kerk Day</title><subtitle>Web Development, Freelance Design</subtitle><entry><title type="html">This Website Was Made With Jekyll</title><link href="https://kerkday.com/2020/11/01/website-made-with-jekyll.html" rel="alternate" type="text/html" title="This Website Was Made With Jekyll" /><published>2020-11-01T22:48:47-07:00</published><updated>2020-11-01T22:48:47-07:00</updated><id>https://kerkday.com/2020/11/01/website-made-with-jekyll</id><content type="html" xml:base="https://kerkday.com/2020/11/01/website-made-with-jekyll.html">&lt;h2 id=&quot;-the-challenge&quot;&gt;üèá The Challenge&lt;/h2&gt;
&lt;p&gt;Right before graduating from my two year degree in &lt;a href=&quot;https://www.sait.ca/programs-and-courses/diplomas/information-technology&quot;&gt;Software Development&lt;/a&gt;, I cobbled together a static website using HTML, CSS, and JavaScript. It was fun to do, and looked quite nice; but it was a major pain to update.&lt;br /&gt;
To update the website, it would be the process of adding the new page, then associating every other page with that page. I simplified it a little by using AJAX and JSON data, but it was still a frustrating process.&lt;/p&gt;

&lt;p&gt;That‚Äôs why I switched my personal website over to &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;br /&gt;
Jekyll is a blog platform that uses Ruby to set up a static blog. Set up a local instance of your blog, make changes, then upload the finished product elsewhere. Adding posts to the blog is as simple as making a new &lt;a href=&quot;https://www.markdownguide.org/&quot;&gt;Markdown&lt;/a&gt; file for your new post, and Jekyll takes care of the rest; Jekyll adds the post to your website as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.html&lt;/code&gt; file, connects it as needed to other pages, and adds the post to an RSS feed.&lt;/p&gt;

&lt;h2 id=&quot;-benefits-of-jekyll&quot;&gt;üß™ Benefits of Jekyll&lt;/h2&gt;
&lt;p&gt;First and foremost, no more HTML.&lt;br /&gt;
I mean, I still used HTML to build this website, but only to build the template. You also only set up your websites template once. From that point forward, you needn‚Äôt dig into your code to add anything.&lt;/p&gt;

&lt;p&gt;You can also upload your website straight to &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, which won‚Äôt cost you a dime. This way, I can host a blog without having to invest in a server that can host WordPress. I can save those costs for more complex and interactive projects.
One of these days, I want to set up a podcast, and &lt;a href=&quot;https://dyscribe.com/en/podcasting/podcasting-with-jekyll-in-4-steps.html&quot;&gt;that can be done using Jekyll too&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;-alternatives&quot;&gt;üëâ Alternatives&lt;/h2&gt;
&lt;p&gt;Now, while Jekyll is useful for a simple blog or a podcast, it doesn‚Äôt work for every website.&lt;br /&gt;
Recently, I‚Äôve been working with a not-for-profit to make a community website, as they wanted to move away from Facebook. This meant adding user profiles, a paid membership, forums, galleries, etc. With users actually adding/changing things on the website, the website could not be a static blog. For this I went with &lt;a href=&quot;https://wordpress.org&quot;&gt;WordPress&lt;/a&gt;, and added &lt;a href=&quot;https://wordpress.org/plugins/&quot;&gt;plugins&lt;/a&gt; as needed.&lt;/p&gt;

&lt;p&gt;It also doesn‚Äôt work that well if you want to monetize your blog, or sell things to your members. For these, I would suggest &lt;a href=&quot;https://squarespace.com&quot;&gt;Squarespace&lt;/a&gt; or &lt;a href=&quot;https://patreon.com&quot;&gt;Patreon&lt;/a&gt;. There‚Äôs also &lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt; if you‚Äôre a little more tech savvy.&lt;/p&gt;

&lt;p&gt;And of course, I can‚Äôt say that these suggestions cover everything. It would be worthwhile to do a little research into what solution works best for you, based on your skills and your price-range.&lt;/p&gt;</content><author><name></name></author><category term="Ruby" /><summary type="html">üèá The Challenge Right before graduating from my two year degree in Software Development, I cobbled together a static website using HTML, CSS, and JavaScript. It was fun to do, and looked quite nice; but it was a major pain to update. To update the website, it would be the process of adding the new page, then associating every other page with that page. I simplified it a little by using AJAX and JSON data, but it was still a frustrating process.</summary></entry></feed>